openapi: 3.0.3
info:
  title: Delivery service
  version: 1.0.0
  description: |-
    Github reposytory at [https://github.com/Adeodonne/PPLabs](https://github.com/Adeodonne/PPLabs)
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: You entered incorrect data
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: Phone number
          in: query
          description: The user`s phone number for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: You entered incorrect data
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        '200':
          description: successful operation
  /user/{id}:
    get:
      tags:
        - user
      summary: Get user by user id
      description: ''
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: 'Id of user you want to get information about'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: Change information about user
          required: true
          schema:
            type: integer
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
        '400':
          description: You entered incorrect data
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The user that needs to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
  /shipment:
    post:
      tags:
        - Shipment
      summary: Create shipment and seller
      description: A worker create 
      operationId: createShipment
      requestBody:
        description: Created sipment
        content:
          application/shipment/json:
            schema:
              $ref: '#/components/schemas/Shipment'
          application/seller/json:
            schema:
              $ref: '#/components/schemas/Seller'
      responses:
        '200':
          description: successful operation
          content:
            application/shipment/json:
              schema:
                $ref: '#/components/schemas/Shipment'
            application/seller/json:
              schema:
                $ref: '#/components/schemas/Seller'
        '400':
          description: You entered incorrect data
  /shipment/{id}:
    get:
      tags:
        - Shipment
      summary: Get shipment and seller by shipment id
      description: ''
      operationId: getShipmentById
      parameters:
        - name: id
          in: path
          description: 'Id of shipment you want to get information about'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/shipment/json:
              schema:
                $ref: '#/components/schemas/Shipment'
            application/seller/json:
              schema:
                $ref: '#/components/schemas/Seller'
        '404':
          description: Shipment not found
    put:
      tags:
        - Shipment
      summary: Update shipment and seller found by shipment id
      description: This can only be changed by the logged in administrator.
      operationId: updateShipment
      parameters:
        - name: id
          in: path
          description: Change information about shipment
          required: true
          schema:
            type: integer
      requestBody:
        description: Update an existent shipment in the store
        content:
          application/shipment/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          application/seller/json:
            schema:
              $ref: '#/components/schemas/Seller'
      responses:
        '200':
          description: successful operation
          content:
            application/shipment/json:
              schema:
                $ref: '#/components/schemas/Shipment'
            application/seller/json:
              schema:
                $ref: '#/components/schemas/Seller'
        '400':
          description: You entered incorrect data
        '404':
          description: Shipment not found
    delete:
      tags:
        - Shipment
      summary: Delete shipment and seller
      description: This can only be done by the logged in worker or administrator.
      operationId: deleteShipment
      parameters:
        - name: id
          in: path
          description: The shipment that needs to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Shipment deleted
        '404':
          description: Shipment not found

components:
  schemas:
    Country:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        countryName:
          type: string
          example : Ukraine
    State:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        stateName:
          type: string
          example: Lvivska oblast
        idCountry:
          type: integer
          format: int64
          example: 10
      
    City:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        cityName:
          type: string
          example: Lviv
        idState:
          type: integer
          format: int64
          example: 10
    PostOffice:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Post office â„–1
        idCity:
          type: integer
          format: int64
          example: 10
        adress:
          type: string
          example: Stepana Bandery street, 14
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        fullName:
          type: string
          example: Oleh Prokopenko Serhiyovych
        address:
          type: string
          example: Roman Shuhevych street, 14
        idCity:
          type: integer
          format: int64
          example: 10
        phoneNumber:
          type: string
          example: +380123456789
        password:
          type: string
          example: 9fdghs92
        role:
          type: integer
          example: 0
    Shipment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        idUser:
          type: integer
          format: int64
          example: 10
        idShipmentType:
          type: integer
          format: int64
          example: 10
        reciveTime:
          type: string
          pattern: date-time
          example: 2013-10-11 14:23:16.023
        idPostOffice:
          type: integer
          format: int64
          example: 10
        idProductType:
          type: integer
          format: int64
          example: 10
        idSeller:
          type: integer
          format: int64
          example: 10
    Seller:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        weight:
          type: integer
          format: int64
          example: 0.9
        volume:
          type: integer
          format: int64
          example: 5
        idPostOfficeSender:
          type: integer
          format: int64
          example: 10
        sendTime:
          type: string
          pattern: date-time
          example: 2011-05-02 07:11:23.473
        description:
          type: string
          example: Bix box with different things
        approximatelyPrice:
          type: integer
          format: int64
          example: 310
    PaymentDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        idShipment:
          type: integer
          format: int64
          example: 10
        price:
          type: integer
          format: int64
          example: 938
        idPaymentType:
          type: integer
          format: int64
          example: 10
        paymentType:
          type: string
          pattern: date-time
          example: 2016-12-21 09:13:22.023
    PaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        paymentTypeName:
          type: string
          example : Cash
    ProductType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        typeName:
          type: string
          example : Mobile Phone
    ShipmentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example : Car
    ShipmentStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        idStatusName:
          type: integer
          format: int64
          example: 10
        idShipment:
          type: integer
          format: int64
          example: 10
        statusTime:
          type: string
          pattern: date-time
          example: 2011-01-03 22:17:23.113
        details:
          type: string
          example: Parcel is delivering
    ShipmentStatusName:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        statusName:
          type: string
          example : Delivered